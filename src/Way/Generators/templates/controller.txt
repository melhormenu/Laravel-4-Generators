<?php

class $NAME$ extends \BaseController {

	/**
	 * Display a listing of the resource.
	 * GET /$COLLECTION$
	 *
	 * @return Response
	 */
	public function index()
	{
		$$COLLECTION$ = $MODEL$::all();

		if($$COLLECTION$) {
				return $this->apiResponse(true, 'Success listing $DESCRIPTION$.', $$COLLECTION$);
		}
		return $this->apiResponse(false, 'Error listing $DESCRIPTION$.', null);
	}

	/**
	 * Show the form for creating a new resource.
	 * GET /$COLLECTION$/create
	 *
	 * @return Response
	 */
	public function create()
	{
		//
	}

	/**
	 * Store a newly created resource in storage.
	 * POST /$COLLECTION$
	 *
	 * @return Response
	 */
	public function store()
	{
		$data = Input::except('q');

		$$RESOURCE$ = new $MODEL$($data);

		try {
				$$RESOURCE$->saveOrFail();
				return $this->apiResponse(true, 'Success creating $MODEL$.', $$RESOURCE$, [], 201);
		} catch (\Exception $e) {
				return $this->apiResponse(true, $e->getMessage(), [], $$RESOURCE$->getErrors(), 400);
		}
	}

	/**
	 * Display the specified resource.
	 * GET /$COLLECTION$/{id}
	 *
	 * @param  int  $id
	 * @return Response
	 */
	public function show($id)
	{
		$$RESOURCE$ = new $MODEL$($id);

		if($$RESOURCE$){
				return $this->apiResponse(true, 'Success getting $MODEL$.', $$RESOURCE$);
		}
		return $this->apiResponse(false, 'Seems like there is no $MODEL$ with this id.', null);
	}

	/**
	 * Show the form for editing the specified resource.
	 * GET /$COLLECTION$/{id}/edit
	 *
	 * @param  int  $id
	 * @return Response
	 */
	public function edit($id)
	{
		//
	}

	/**
	 * Update the specified resource in storage.
	 * PUT /$COLLECTION$/{id}
	 *
	 * @param  int  $id
	 * @return Response
	 */
	public function update($id)
	{
		$data = Input::except('id');

		$$RESOURCE$ = $MODEL$::find($id);
		$$RESOURCE$->fill($data);
		try {
				$$RESOURCE$->saveOrFail();
				return $this->apiResponse(true, 'Success updating the $MODEL$.', $$RESOURCE$, 201);
		} catch(Exception $e) {
				return $this->apiResponse(false, 'Error updating the $MODEL$', null, 400, $$RESOURCE$->getErrors());
		}
	}

	/**
	 * Remove the specified resource from storage.
	 * DELETE /$COLLECTION$/{id}
	 *
	 * @param  int  $id
	 * @return Response
	 */
	public function destroy($id)
	{
		$$RESOURCE$ = $MODEL$::find($id);

		if($$RESOURCE$) {
				$$RESOURCE$->delete();
				return $this->apiResponse(false, 'Success deleting $MODEL$.', null,[], 204);
		}

		return $this->apiResponse(false, '$MODEL$ don\'t exist.', null);
	}

}
